---
- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    key_name: my-key1
    instance_type: t2.micro
    security_group: EC2SecurityGroup1
    image: ami-08962a4068733a2b6
    region: us-east-2
  tasks:
    - name: Launch instance
      ec2_instance:
         name: "{{ item }}"
         key_name: "{{ key_name }}"
         security_group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image_id: "{{ image }}"
         region: "{{ region }}"
         tags:
           name: "{{ item }}"
      with_items:
        - "build"
        - "docker_run"
      register: ec2
    - debug:
        var: ec2.instances


#    - name: Ensure the added instance is in /etc/ansible/hosts
#      lineinfile:
#        path: /etc/ansible/hosts
#        insertafter: '\[build\]'
#        line: "{{ item.public_ip_address }}"
#      with_items: "{{ ec2.instances }}"

    - name: Add all instance public IPs to host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groups: "{{ item }}"
        ansible_ssh_private_key_file: ~/.ssh/my-key.pem
        with_items:
          - "build"
          - "docker_run"
      with_items: "{{ ec2.instances }}"


#- name: Create a sandbox instance
#  hosts: build
#  remote_user: ubuntu
#  become: yes
#  vars:
#      pass_dockerhub: !vault |
#          $ANSIBLE_VAULT;1.1;AES256
#          39353830306536366432653162306236366362656530376436346632623363396530663038366336
#          6633623434383566346464633136333831643463306439310a353335653234363133326130363734
#          39666530313237633765393261396566363338303164316234616632313538323265373835666136
#          6538376536633563350a313164633639323236393535636338653064626365303636353830343736
#          35386363323035383861353238336633326162396163656363656163393630383432346432303864
#          3538636533363837393361383631616538646237366166343631
#  tasks:
#    - name: update repository
#      apt:
#       update_cache: yes
#    - name: Ensure docker install
#      apt:
#       name: docker.io
#       state: present
#    - name: Ensure Dockerfile is clone
#      git:
#       repo: https://github.com/henre1989/Dockerfile_java_app.git
#       dest: /home/server1/Dockerfile_java_app
#    - name: Ensure python3-pip is install
#      apt:
#       name: python3-pip
#       state: present
#    - name: Ensure Docker SDK for Python is install
#      pip:
#       name: docker
#       state: present
#    - name: Ensure PyYAML is install
#      pip:
#       name: PyYAML
#       state: present
#    - name: Login to DockerHub
#      docker_login:
#       username: henre1989
#       password: "{{ pass_dockerhub }}"
#       state: present
#    - name: Ensure build docker image und push to dockerhub
#      docker_image:
#       build:
#        path: /home/server1//Dockerfile_java_app
#       name: henre1989/java_app
#       tag: v1
#       push: yes
#       source: build